/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContentIDRegistry,
  ContentIDRegistryInterface,
} from "../ContentIDRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "AddToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contentId",
        type: "string",
      },
    ],
    name: "Remove",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "RemoveToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contentId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiredAt",
        type: "uint256",
      },
    ],
    name: "Upset",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
    ],
    name: "availableExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "expand",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
    ],
    name: "expiredAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
    ],
    name: "getExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
    ],
    name: "getSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "contract IPriceAdaptor",
        name: "_priceAdaptor",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "insert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "contentIds",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "sizes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "expirations",
        type: "uint256[]",
      },
    ],
    name: "insertMult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
    ],
    name: "isExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "metas",
    outputs: [
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceAdaptor",
    outputs: [
      {
        internalType: "contract IPriceAdaptor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "contentIds",
        type: "string[]",
      },
    ],
    name: "removeMult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b806200006357506200005030620001c560201b6200091c1760201c565b15801562000063575060005460ff166001145b6200008b5760405162461bcd60e51b81526004016200008290620001d4565b60405180910390fd5b6000805460ff191660011790558015620000af576000805461ff0019166101001790555b8015620000ec576000805461ff0019169055604051600080516020620020c783398151915290620000e3906001906200024a565b60405180910390a15b50600054610100900460ff16158080156200010e5750600054600160ff909116105b806200013e57506200012b30620001c560201b6200091c1760201c565b1580156200013e575060005460ff166001145b6200015d5760405162461bcd60e51b81526004016200008290620001d4565b6000805460ff19166001179055801562000181576000805461ff0019166101001790555b8015620001be576000805461ff0019169055604051600080516020620020c783398151915290620001b5906001906200024a565b60405180910390a15b506200025a565b6001600160a01b03163b151590565b602080825281016200022781602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b600060ff821662000227565b62000244816200022d565b82525050565b6020810162000227828462000239565b611e5d806200026a6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063b33f78ca1161007c578063b33f78ca14610309578063c0c53b8b1461031c578063d48bfca71461032f578063d8999bdf14610342578063e486033914610355578063f2fde38b1461038557600080fd5b8063715018a61461024857806375190dd114610250578063775a4cb0146102aa57806380599e4b146102ca5780638da5cb5b146102dd578063b31bdec4146102f657600080fd5b8063298468a711610115578063298468a7146101d657806337e491c9146101e957806352bbb4f2146101fc5780635fa7b5841461020f578063669cf1c6146102225780636c6f07ad1461023557600080fd5b806305ee43f614610152578063064146181461016757806308b1cdcf1461017a57806309be8e1d146101a35780631266cc06146101b6575b600080fd5b6101656101603660046112bd565b610398565b005b610165610175366004611344565b6103dd565b61018d6101883660046113c3565b6103f1565b60405161019a919061141b565b60405180910390f35b61018d6101b136600461143d565b6104c3565b6066546101c9906001600160a01b031681565b60405161019a91906114a9565b6101656101e436600461152c565b610502565b61018d6101f736600461143d565b6105c2565b61016561020a3660046115d5565b61067b565b61016561021d366004611625565b61068d565b61018d61023036600461143d565b6106a1565b6101656102433660046115d5565b610704565b610165610711565b61029b61025e36600461143d565b6067602090815260009283526040909220815180830184018051928152908401929093019190912091528054600182015460029092015490919083565b60405161019a93929190611646565b6102bd6102b836600461143d565b610725565b60405161019a9190611676565b6101656102d8366004611684565b610767565b6033546001600160a01b031660405161019a91906116c8565b61018d61030436600461143d565b610771565b6102bd610317366004611625565b6107b1565b61016561032a3660046116d6565b6107d1565b61016561033d366004611625565b6108bf565b6102bd61035036600461143d565b6108d0565b610378610363366004611625565b60656020526000908152604090205460ff1681565b60405161019a9190611725565b610165610393366004611733565b6108e5565b60005b81518110156103d9576103c7338383815181106103ba576103ba611754565b602002602001015161092b565b806103d181611780565b91505061039b565b5050565b6103eb8433338686866109d4565b50505050565b60006103fc846107b1565b6104215760405162461bcd60e51b8152600401610418906117df565b60405180910390fd5b6066546001600160a01b0385811660009081526065602052604090819020549051639504c00360e01b81529190921691639504c0039161046b9160ff1690879087906004016117ef565b60206040518083038186803b15801561048357600080fd5b505afa158015610497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bb9190611808565b949350505050565b6001600160a01b03821660009081526067602052604080822090516104e9908490611877565b9081526040519081900360200190205490505b92915050565b81518351146105235760405162461bcd60e51b8152600401610418906118cc565b80518351146105445760405162461bcd60e51b8152600401610418906118cc565b60005b83518110156105bb576105a985333387858151811061056857610568611754565b602002602001015187868151811061058257610582611754565b602002602001015187878151811061059c5761059c611754565b60200260200101516109d4565b806105b381611780565b915050610547565b5050505050565b60006105ce8383610725565b6105ea5760405162461bcd60e51b815260040161041890611921565b6001600160a01b0383166000908152606760205260409081902090516106749190610616908590611877565b90815260200160405180910390206002015460676000866001600160a01b03166001600160a01b031681526020019081526020016000208460405161065b9190611877565b9081526040519081900360200190206001015490610bba565b9392505050565b6106888333338585610bc6565b505050565b610695610d75565b61069e81610d9f565b50565b60006106ad8383610725565b6106c95760405162461bcd60e51b815260040161041890611921565b6106d383836108d0565b156106f05760405162461bcd60e51b815260040161041890611972565b610674426106fe85856105c2565b90610de5565b6106888333338585610df1565b610719610d75565b6107236000610fb7565b565b6001600160a01b038216600090815260676020526040808220905182919061074e908590611877565b9081526040519081900360200190205411905092915050565b61069e338261092b565b6001600160a01b0382166000908152606760205260408082209051610797908490611877565b908152602001604051809103902060010154905092915050565b6001600160a01b031660009081526065602052604090205460ff16151590565b600054610100900460ff16158080156107f15750600054600160ff909116105b8061080b5750303b15801561080b575060005460ff166001145b6108275760405162461bcd60e51b8152600401610418906119cd565b6000805460ff19166001179055801561084a576000805461ff0019166101001790555b606680546001600160a01b0319166001600160a01b03851617905561086f8483611009565b80156103eb576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906108b1906001906119f1565b60405180910390a150505050565b6108c7610d75565b61069e8161103e565b6000426108dd84846105c2565b109392505050565b6108ed610d75565b6001600160a01b0381166109135760405162461bcd60e51b815260040161041890611a42565b61069e81610fb7565b6001600160a01b03163b151590565b6109358282610725565b6109515760405162461bcd60e51b815260040161041890611921565b6001600160a01b038216600090815260676020526040908190209051610978908390611877565b9081526040519081900360200181206000808255600182018190556002909101557fafb58637702ac59f4ec776bf00731c6db5de2befbf39779a2c5be4922201bb0e906109c89084908490611a84565b60405180910390a15050565b6109dd866107b1565b6109f95760405162461bcd60e51b8152600401610418906117df565b610a038484610725565b1580610a145750610a1484846108d0565b610a305760405162461bcd60e51b815260040161041890611afe565b6000821180610a3f5750600081115b610a5b5760405162461bcd60e51b815260040161041890611b4c565b6000610a688784846103f1565b6040516323b872dd60e01b81529091506001600160a01b038816906323b872dd90610a9b90899030908690600401611b5c565b602060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed9190611b8a565b5060405180606001604052808481526020018381526020014281525060676000876001600160a01b03166001600160a01b0316815260200190815260200160002085604051610b3c9190611877565b90815260200160405180910390206000820151816000015560208201518160010155604082015181600201559050507f4471eb362c285c1ce8c27b53fa652555ee6b39467a3108f2024529852e38accf858585610b9989896105c2565b604051610ba99493929190611bab565b60405180910390a150505050505050565b60006106748284611bf0565b610bcf856107b1565b610beb5760405162461bcd60e51b8152600401610418906117df565b610bf58383610725565b610c115760405162461bcd60e51b815260040161041890611921565b610c1b83836108d0565b15610c385760405162461bcd60e51b815260040161041890611972565b60008111610c585760405162461bcd60e51b815260040161041890611c52565b6000610c6484846104c3565b90506000610c738783856103f1565b6040516323b872dd60e01b81529091506001600160a01b038816906323b872dd90610ca690899030908690600401611b5c565b602060405180830381600087803b158015610cc057600080fd5b505af1158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf89190611b8a565b50610d0d610d068686610771565b8490610bba565b6001600160a01b038616600090815260676020526040908190209051610d34908790611877565b908152604051908190036020019020600101557f4471eb362c285c1ce8c27b53fa652555ee6b39467a3108f2024529852e38accf858584610b9983836105c2565b6033546001600160a01b031633146107235760405162461bcd60e51b815260040161041890611c97565b610da8816107b1565b610dc45760405162461bcd60e51b815260040161041890611cdb565b6001600160a01b03166000908152606560205260409020805460ff19169055565b60006106748284611ceb565b610dfa856107b1565b610e165760405162461bcd60e51b8152600401610418906117df565b60008111610e365760405162461bcd60e51b815260040161041890611d46565b6000610e4284846106a1565b90506000610e518784846103f1565b6040516323b872dd60e01b81529091506001600160a01b038816906323b872dd90610e8490899030908690600401611b5c565b602060405180830381600087803b158015610e9e57600080fd5b505af1158015610eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed69190611b8a565b506001600160a01b038516600090815260676020526040908190209051610f1a918591610f04908890611877565b9081526040519081900360200190205490610bba565b6001600160a01b038616600090815260676020526040908190209051610f41908790611877565b9081526040805160209281900383018120939093556001600160a01b0388166000908152606790925290207f4471eb362c285c1ce8c27b53fa652555ee6b39467a3108f2024529852e38accf9187918791610f9d908390611877565b90815260405190819003602001902054610b9989896105c2565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110305760405162461bcd60e51b815260040161041890611d9e565b61103982610fb7565b6103d9815b611047816107b1565b156110645760405162461bcd60e51b815260040161041890611de2565b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561109d57600080fd5b505afa1580156110b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d59190611e06565b6001600160a01b03919091166000908152606560205260409020805460ff191660ff909216919091179055565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561113e5761113e611102565b6040525050565b600061115060405190565b905061115c8282611118565b919050565b600067ffffffffffffffff82111561117b5761117b611102565b5060209081020190565b600067ffffffffffffffff82111561119f5761119f611102565b601f19601f83011660200192915050565b82818337506000910152565b60006111cf6111ca84611185565b611145565b9050828152602081018484840111156111ea576111ea600080fd5b6111f58482856111b0565b509392505050565b600082601f83011261121157611211600080fd5b81356104bb8482602086016111bc565b600061122f6111ca84611161565b8381529050602080820190840283018581111561124e5761124e600080fd5b835b8181101561128f57803567ffffffffffffffff81111561127257611272600080fd5b80860161127f89826111fd565b8552505060209283019201611250565b5050509392505050565b600082601f8301126112ad576112ad600080fd5b81356104bb848260208601611221565b6000602082840312156112d2576112d2600080fd5b813567ffffffffffffffff8111156112ec576112ec600080fd5b6104bb84828501611299565b60006001600160a01b0382166104fc565b60006104fc826112f8565b61131d81611309565b811461069e57600080fd5b80356104fc81611314565b8061131d565b80356104fc81611333565b6000806000806080858703121561135d5761135d600080fd5b60006113698787611328565b945050602085013567ffffffffffffffff81111561138957611389600080fd5b611395878288016111fd565b93505060406113a687828801611339565b92505060606113b787828801611339565b91505092959194509250565b6000806000606084860312156113db576113db600080fd5b60006113e78686611328565b93505060206113f886828701611339565b925050604061140986828701611339565b9150509250925092565b805b82525050565b602081016104fc8284611413565b61131d816112f8565b80356104fc81611429565b6000806040838503121561145357611453600080fd5b600061145f8585611432565b925050602083013567ffffffffffffffff81111561147f5761147f600080fd5b61148b858286016111fd565b9150509250929050565b60006104fc82611309565b61141581611495565b602081016104fc82846114a0565b60006114c56111ca84611161565b838152905060208082019084028301858111156114e4576114e4600080fd5b835b8181101561128f57806114f98882611339565b845250602092830192016114e6565b600082601f83011261151c5761151c600080fd5b81356104bb8482602086016114b7565b6000806000806080858703121561154557611545600080fd5b60006115518787611328565b945050602085013567ffffffffffffffff81111561157157611571600080fd5b61157d87828801611299565b935050604085013567ffffffffffffffff81111561159d5761159d600080fd5b6115a987828801611508565b925050606085013567ffffffffffffffff8111156115c9576115c9600080fd5b6113b787828801611508565b6000806000606084860312156115ed576115ed600080fd5b60006115f98686611328565b935050602084013567ffffffffffffffff81111561161957611619600080fd5b6113f8868287016111fd565b60006020828403121561163a5761163a600080fd5b60006104bb8484611328565b606081016116548286611413565b6116616020830185611413565b6104bb6040830184611413565b801515611415565b602081016104fc828461166e565b60006020828403121561169957611699600080fd5b813567ffffffffffffffff8111156116b3576116b3600080fd5b6104bb848285016111fd565b611415816112f8565b602081016104fc82846116bf565b6000806000606084860312156116ee576116ee600080fd5b60006116fa8686611432565b935050602061170b86828701611328565b925050604061140986828701611328565b60ff8116611415565b602081016104fc828461171c565b60006020828403121561174857611748600080fd5b60006104bb8484611432565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156117945761179461176a565b5060010190565b602481526000602082017f436f6e74656e74494452656769737472793a206e6f6e6578697374656e74207481526337b5b2b760e11b602082015291505b5060400190565b602080825281016104fc8161179b565b60608101611654828661171c565b80516104fc81611333565b60006020828403121561181d5761181d600080fd5b60006104bb84846117fd565b60005b8381101561184457818101518382015260200161182c565b838111156103eb5750506000910152565b600061185f825190565b61186d818560208601611829565b9290920192915050565b60006106748284611855565b602c81526000602082017f436f6e74656e74494452656769737472793a20696e76616c696420706172616d81526b32ba32b9103632b733ba341760a11b602082015291506117d8565b602080825281016104fc81611883565b602881526000602082017f436f6e74656e74494452656769737472793a206e6f6e6578697374656e7420638152671bdb9d195b9d125960c21b602082015291506117d8565b602080825281016104fc816118dc565b602481526000602082017f436f6e74656e74494452656769737472793a20636f6e74656e744964206578708152631a5c995960e21b602082015291506117d8565b602080825281016104fc81611931565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506117d8565b602080825281016104fc81611982565b600060ff82166104fc565b611415816119dd565b602081016104fc82846119e8565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506117d8565b602080825281016104fc816119ff565b6000611a5c825190565b808452602084019350611a73818560208601611829565b601f01601f19169290920192915050565b60408101611a9282856116bf565b81810360208301526104bb8184611a52565b603b81526000602082017f436f6e74656e74494452656769737472793a20636f6e74656e7449642065786981527f737473206f72206e6f6e6578706972656420636f6e74656e7449640000000000602082015291506117d8565b602080825281016104fc81611aa4565b602181526000602082017f436f6e74656e74494452656769737472793a20696e76616c696420706172616d8152607360f81b602082015291506117d8565b602080825281016104fc81611b0e565b60608101611b6a82866116bf565b61166160208301856116bf565b80151561131d565b80516104fc81611b77565b600060208284031215611b9f57611b9f600080fd5b60006104bb8484611b7f565b60808101611bb982876116bf565b8181036020830152611bcb8186611a52565b9050611bda6040830185611413565b611be76060830184611413565b95945050505050565b60008219821115611c0357611c0361176a565b500190565b602d81526000602082017f436f6e74656e74494452656769737472793a20696e76616c696420636f6e746581526c373a1032bc3834b930ba34b7b760991b602082015291506117d8565b602080825281016104fc81611c08565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016104fc81611c62565b601c81526000602082017f506179546f6b656e733a206e6f6e6578697374656e7420746f6b656e0000000081529150611c90565b602080825281016104fc81611ca7565b600082821015611cfd57611cfd61176a565b500390565b602781526000602082017f436f6e74656e74494452656769737472793a20696e76616c696420636f6e74658152666e742073697a6560c81b602082015291506117d8565b602080825281016104fc81611d02565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506117d8565b602080825281016104fc81611d56565b601781526000602082017f506179546f6b656e733a20746f6b656e2065786973747300000000000000000081529150611c90565b602080825281016104fc81611dae565b60ff811661131d565b80516104fc81611df2565b600060208284031215611e1b57611e1b600080fd5b60006104bb8484611dfb56fea264697066735822122069f2c654da891f2482b7a0cafac80b3ca1bc5c927dd54cabe4985db06489f58264736f6c634300080900337f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498";

export class ContentIDRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContentIDRegistry> {
    return super.deploy(overrides || {}) as Promise<ContentIDRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContentIDRegistry {
    return super.attach(address) as ContentIDRegistry;
  }
  connect(signer: Signer): ContentIDRegistry__factory {
    return super.connect(signer) as ContentIDRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentIDRegistryInterface {
    return new utils.Interface(_abi) as ContentIDRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContentIDRegistry {
    return new Contract(address, _abi, signerOrProvider) as ContentIDRegistry;
  }
}
