"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentIDRegistry__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
            },
        ],
        name: "AddToken",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "contentId",
                type: "string",
            },
        ],
        name: "Remove",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
        ],
        name: "RemoveToken",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "contentId",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "expiredAt",
                type: "uint256",
            },
        ],
        name: "Upset",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
        ],
        name: "addToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "string",
                name: "contentId",
                type: "string",
            },
        ],
        name: "exists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "string",
                name: "contentId",
                type: "string",
            },
        ],
        name: "expiredAt",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "string",
                name: "contentId",
                type: "string",
            },
        ],
        name: "getExpiration",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "string",
                name: "contentId",
                type: "string",
            },
        ],
        name: "getSize",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expiration",
                type: "uint256",
            },
        ],
        name: "getValue",
        outputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "admin",
                type: "address",
            },
            {
                internalType: "contract IPriceAdaptor",
                name: "_priceAdaptor",
                type: "address",
            },
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                internalType: "string",
                name: "contentId",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expiration",
                type: "uint256",
            },
        ],
        name: "insert",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                internalType: "string[]",
                name: "contentIds",
                type: "string[]",
            },
            {
                internalType: "uint256[]",
                name: "sizes",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "expirations",
                type: "uint256[]",
            },
        ],
        name: "insertMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "string",
                name: "contentId",
                type: "string",
            },
        ],
        name: "isExpired",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        name: "metas",
        outputs: [
            {
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expiration",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "createAt",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceAdaptor",
        outputs: [
            {
                internalType: "contract IPriceAdaptor",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "contentId",
                type: "string",
            },
        ],
        name: "remove",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string[]",
                name: "contentIds",
                type: "string[]",
            },
        ],
        name: "removeMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
        ],
        name: "removeToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                internalType: "string",
                name: "contentId",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "expiration",
                type: "uint256",
            },
        ],
        name: "renew",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
        ],
        name: "tokenExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        name: "tokens",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b806200006357506200005030620001c560201b620008701760201c565b15801562000063575060005460ff166001145b6200008b5760405162461bcd60e51b81526004016200008290620001d4565b60405180910390fd5b6000805460ff191660011790558015620000af576000805461ff0019166101001790555b8015620000ec576000805461ff001916905560405160008051602062001d6d83398151915290620000e3906001906200024a565b60405180910390a15b50600054610100900460ff16158080156200010e5750600054600160ff909116105b806200013e57506200012b30620001c560201b620008701760201c565b1580156200013e575060005460ff166001145b6200015d5760405162461bcd60e51b81526004016200008290620001d4565b6000805460ff19166001179055801562000181576000805461ff0019166101001790555b8015620001be576000805461ff001916905560405160008051602062001d6d83398151915290620001b5906001906200024a565b60405180910390a15b506200025a565b6001600160a01b03163b151590565b602080825281016200022781602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b600060ff821662000227565b62000244816200022d565b82525050565b6020810162000227828462000239565b611b03806200026a6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806375190dd1116100b8578063b33f78ca1161007c578063b33f78ca146102cd578063c0c53b8b146102e0578063d48bfca7146102f3578063d8999bdf14610306578063e486033914610319578063f2fde38b1461034957600080fd5b806375190dd114610214578063775a4cb01461026e57806380599e4b1461028e5780638da5cb5b146102a1578063b31bdec4146102ba57600080fd5b8063298468a7116100ff578063298468a7146101c057806337e491c9146101d357806352bbb4f2146101e65780635fa7b584146101f9578063715018a61461020c57600080fd5b806305ee43f61461013c578063064146181461015157806308b1cdcf1461016457806309be8e1d1461018d5780631266cc06146101a0575b600080fd5b61014f61014a36600461103f565b61035c565b005b61014f61015f3660046110c6565b6103a1565b610177610172366004611145565b6103b5565b604051610184919061119d565b60405180910390f35b61017761019b3660046111bf565b610487565b6066546101b3906001600160a01b031681565b604051610184919061122b565b61014f6101ce3660046112ae565b6104c6565b6101776101e13660046111bf565b610586565b61014f6101f4366004611357565b61063f565b61014f6102073660046113a7565b610651565b61014f610665565b61025f6102223660046111bf565b6067602090815260009283526040909220815180830184018051928152908401929093019190912091528054600182015460029092015490919083565b604051610184939291906113c8565b61028161027c3660046111bf565b610679565b60405161018491906113f8565b61014f61029c366004611406565b6106bb565b6033546001600160a01b0316604051610184919061144a565b6101776102c83660046111bf565b6106c5565b6102816102db3660046113a7565b610705565b61014f6102ee366004611458565b610725565b61014f6103013660046113a7565b610813565b6102816103143660046111bf565b610824565b61033c6103273660046113a7565b60656020526000908152604090205460ff1681565b60405161018491906114a7565b61014f6103573660046114b5565b610839565b60005b815181101561039d5761038b3383838151811061037e5761037e6114d6565b602002602001015161087f565b8061039581611502565b91505061035f565b5050565b6103af843333868686610928565b50505050565b60006103c084610705565b6103e55760405162461bcd60e51b81526004016103dc90611561565b60405180910390fd5b6066546001600160a01b0385811660009081526065602052604090819020549051639504c00360e01b81529190921691639504c0039161042f9160ff169087908790600401611571565b60206040518083038186803b15801561044757600080fd5b505afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f919061158a565b949350505050565b6001600160a01b03821660009081526067602052604080822090516104ad9084906115f9565b9081526040519081900360200190205490505b92915050565b81518351146104e75760405162461bcd60e51b81526004016103dc9061164e565b80518351146105085760405162461bcd60e51b81526004016103dc9061164e565b60005b835181101561057f5761056d85333387858151811061052c5761052c6114d6565b6020026020010151878681518110610546576105466114d6565b6020026020010151878781518110610560576105606114d6565b6020026020010151610928565b8061057781611502565b91505061050b565b5050505050565b60006105928383610679565b6105ae5760405162461bcd60e51b81526004016103dc906116a3565b6001600160a01b03831660009081526067602052604090819020905161063891906105da9085906115f9565b90815260200160405180910390206002015460676000866001600160a01b03166001600160a01b031681526020019081526020016000208460405161061f91906115f9565b9081526040519081900360200190206001015490610b0e565b9392505050565b61064c8333338585610b1a565b505050565b610659610cc9565b61066281610cf3565b50565b61066d610cc9565b6106776000610d39565b565b6001600160a01b03821660009081526067602052604080822090518291906106a29085906115f9565b9081526040519081900360200190205411905092915050565b610662338261087f565b6001600160a01b03821660009081526067602052604080822090516106eb9084906115f9565b908152602001604051809103902060010154905092915050565b6001600160a01b031660009081526065602052604090205460ff16151590565b600054610100900460ff16158080156107455750600054600160ff909116105b8061075f5750303b15801561075f575060005460ff166001145b61077b5760405162461bcd60e51b81526004016103dc906116fe565b6000805460ff19166001179055801561079e576000805461ff0019166101001790555b606680546001600160a01b0319166001600160a01b0385161790556107c38483610d8b565b80156103af576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061080590600190611722565b60405180910390a150505050565b61081b610cc9565b61066281610dc0565b6000426108318484610586565b109392505050565b610841610cc9565b6001600160a01b0381166108675760405162461bcd60e51b81526004016103dc90611773565b61066281610d39565b6001600160a01b03163b151590565b6108898282610679565b6108a55760405162461bcd60e51b81526004016103dc906116a3565b6001600160a01b0382166000908152606760205260409081902090516108cc9083906115f9565b9081526040519081900360200181206000808255600182018190556002909101557fafb58637702ac59f4ec776bf00731c6db5de2befbf39779a2c5be4922201bb0e9061091c90849084906117b5565b60405180910390a15050565b61093186610705565b61094d5760405162461bcd60e51b81526004016103dc90611561565b6109578484610679565b158061096857506109688484610824565b6109845760405162461bcd60e51b81526004016103dc9061182f565b60008211806109935750600081115b6109af5760405162461bcd60e51b81526004016103dc9061187d565b60006109bc8784846103b5565b6040516323b872dd60e01b81529091506001600160a01b038816906323b872dd906109ef9089903090869060040161188d565b602060405180830381600087803b158015610a0957600080fd5b505af1158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4191906118bb565b5060405180606001604052808481526020018381526020014281525060676000876001600160a01b03166001600160a01b0316815260200190815260200160002085604051610a9091906115f9565b90815260200160405180910390206000820151816000015560208201518160010155604082015181600201559050507f4471eb362c285c1ce8c27b53fa652555ee6b39467a3108f2024529852e38accf858585610aed8989610586565b604051610afd94939291906118dc565b60405180910390a150505050505050565b60006106388284611921565b610b2385610705565b610b3f5760405162461bcd60e51b81526004016103dc90611561565b610b498383610679565b610b655760405162461bcd60e51b81526004016103dc906116a3565b610b6f8383610824565b15610b8c5760405162461bcd60e51b81526004016103dc90611966565b60008111610bac5760405162461bcd60e51b81526004016103dc9061187d565b6000610bb88484610487565b90506000610bc78783856103b5565b6040516323b872dd60e01b81529091506001600160a01b038816906323b872dd90610bfa9089903090869060040161188d565b602060405180830381600087803b158015610c1457600080fd5b505af1158015610c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4c91906118bb565b50610c61610c5a86866106c5565b8490610b0e565b6001600160a01b038616600090815260676020526040908190209051610c889087906115f9565b908152604051908190036020019020600101557f4471eb362c285c1ce8c27b53fa652555ee6b39467a3108f2024529852e38accf858584610aed8383610586565b6033546001600160a01b031633146106775760405162461bcd60e51b81526004016103dc906119a8565b610cfc81610705565b610d185760405162461bcd60e51b81526004016103dc906119ec565b6001600160a01b03166000908152606560205260409020805460ff19169055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610db25760405162461bcd60e51b81526004016103dc90611a44565b610dbb82610d39565b61039d815b610dc981610705565b15610de65760405162461bcd60e51b81526004016103dc90611a88565b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610e1f57600080fd5b505afa158015610e33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e579190611aac565b6001600160a01b03919091166000908152606560205260409020805460ff191660ff909216919091179055565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610ec057610ec0610e84565b6040525050565b6000610ed260405190565b9050610ede8282610e9a565b919050565b600067ffffffffffffffff821115610efd57610efd610e84565b5060209081020190565b600067ffffffffffffffff821115610f2157610f21610e84565b601f19601f83011660200192915050565b82818337506000910152565b6000610f51610f4c84610f07565b610ec7565b905082815260208101848484011115610f6c57610f6c600080fd5b610f77848285610f32565b509392505050565b600082601f830112610f9357610f93600080fd5b813561047f848260208601610f3e565b6000610fb1610f4c84610ee3565b83815290506020808201908402830185811115610fd057610fd0600080fd5b835b8181101561101157803567ffffffffffffffff811115610ff457610ff4600080fd5b8086016110018982610f7f565b8552505060209283019201610fd2565b5050509392505050565b600082601f83011261102f5761102f600080fd5b813561047f848260208601610fa3565b60006020828403121561105457611054600080fd5b813567ffffffffffffffff81111561106e5761106e600080fd5b61047f8482850161101b565b60006001600160a01b0382166104c0565b60006104c08261107a565b61109f8161108b565b811461066257600080fd5b80356104c081611096565b8061109f565b80356104c0816110b5565b600080600080608085870312156110df576110df600080fd5b60006110eb87876110aa565b945050602085013567ffffffffffffffff81111561110b5761110b600080fd5b61111787828801610f7f565b9350506040611128878288016110bb565b9250506060611139878288016110bb565b91505092959194509250565b60008060006060848603121561115d5761115d600080fd5b600061116986866110aa565b935050602061117a868287016110bb565b925050604061118b868287016110bb565b9150509250925092565b805b82525050565b602081016104c08284611195565b61109f8161107a565b80356104c0816111ab565b600080604083850312156111d5576111d5600080fd5b60006111e185856111b4565b925050602083013567ffffffffffffffff81111561120157611201600080fd5b61120d85828601610f7f565b9150509250929050565b60006104c08261108b565b61119781611217565b602081016104c08284611222565b6000611247610f4c84610ee3565b8381529050602080820190840283018581111561126657611266600080fd5b835b81811015611011578061127b88826110bb565b84525060209283019201611268565b600082601f83011261129e5761129e600080fd5b813561047f848260208601611239565b600080600080608085870312156112c7576112c7600080fd5b60006112d387876110aa565b945050602085013567ffffffffffffffff8111156112f3576112f3600080fd5b6112ff8782880161101b565b935050604085013567ffffffffffffffff81111561131f5761131f600080fd5b61132b8782880161128a565b925050606085013567ffffffffffffffff81111561134b5761134b600080fd5b6111398782880161128a565b60008060006060848603121561136f5761136f600080fd5b600061137b86866110aa565b935050602084013567ffffffffffffffff81111561139b5761139b600080fd5b61117a86828701610f7f565b6000602082840312156113bc576113bc600080fd5b600061047f84846110aa565b606081016113d68286611195565b6113e36020830185611195565b61047f6040830184611195565b801515611197565b602081016104c082846113f0565b60006020828403121561141b5761141b600080fd5b813567ffffffffffffffff81111561143557611435600080fd5b61047f84828501610f7f565b6111978161107a565b602081016104c08284611441565b60008060006060848603121561147057611470600080fd5b600061147c86866111b4565b935050602061148d868287016110aa565b925050604061118b868287016110aa565b60ff8116611197565b602081016104c0828461149e565b6000602082840312156114ca576114ca600080fd5b600061047f84846111b4565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611516576115166114ec565b5060010190565b602481526000602082017f436f6e74656e74494452656769737472793a206e6f6e6578697374656e74207481526337b5b2b760e11b602082015291505b5060400190565b602080825281016104c08161151d565b606081016113d6828661149e565b80516104c0816110b5565b60006020828403121561159f5761159f600080fd5b600061047f848461157f565b60005b838110156115c65781810151838201526020016115ae565b838111156103af5750506000910152565b60006115e1825190565b6115ef8185602086016115ab565b9290920192915050565b600061063882846115d7565b602c81526000602082017f436f6e74656e74494452656769737472793a20696e76616c696420706172616d81526b32ba32b9103632b733ba341760a11b6020820152915061155a565b602080825281016104c081611605565b602881526000602082017f436f6e74656e74494452656769737472793a206e6f6e6578697374656e7420638152671bdb9d195b9d125960c21b6020820152915061155a565b602080825281016104c08161165e565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b6020820152915061155a565b602080825281016104c0816116b3565b600060ff82166104c0565b6111978161170e565b602081016104c08284611719565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b6020820152915061155a565b602080825281016104c081611730565b600061178d825190565b8084526020840193506117a48185602086016115ab565b601f01601f19169290920192915050565b604081016117c38285611441565b818103602083015261047f8184611783565b603b81526000602082017f436f6e74656e74494452656769737472793a20636f6e74656e7449642065786981527f737473206f72206e6f6e6578706972656420636f6e74656e74496400000000006020820152915061155a565b602080825281016104c0816117d5565b602181526000602082017f436f6e74656e74494452656769737472793a20696e76616c696420706172616d8152607360f81b6020820152915061155a565b602080825281016104c08161183f565b6060810161189b8286611441565b6113e36020830185611441565b80151561109f565b80516104c0816118a8565b6000602082840312156118d0576118d0600080fd5b600061047f84846118b0565b608081016118ea8287611441565b81810360208301526118fc8186611783565b905061190b6040830185611195565b6119186060830184611195565b95945050505050565b60008219821115611934576119346114ec565b500190565b6013815260006020820172021b7b73a32b73a24a22932b3b4b9ba393c9d1606d1b815291505b5060200190565b602080825281016104c081611939565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152600061195f565b602080825281016104c081611976565b601c81526000602082017f506179546f6b656e733a206e6f6e6578697374656e7420746f6b656e000000008152915061195f565b602080825281016104c0816119b8565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b6020820152915061155a565b602080825281016104c0816119fc565b601781526000602082017f506179546f6b656e733a20746f6b656e206578697374730000000000000000008152915061195f565b602080825281016104c081611a54565b60ff811661109f565b80516104c081611a98565b600060208284031215611ac157611ac1600080fd5b600061047f8484611aa156fea2646970667358221220a8b13164dcd1c0b0009f43bb176469533d57bda988d096730531b33936d0353764736f6c634300080900337f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498";
var ContentIDRegistry__factory = /** @class */ (function (_super) {
    __extends(ContentIDRegistry__factory, _super);
    function ContentIDRegistry__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    ContentIDRegistry__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ContentIDRegistry__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ContentIDRegistry__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ContentIDRegistry__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ContentIDRegistry__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ContentIDRegistry__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ContentIDRegistry__factory.bytecode = _bytecode;
    ContentIDRegistry__factory.abi = _abi;
    return ContentIDRegistry__factory;
}(ethers_1.ContractFactory));
exports.ContentIDRegistry__factory = ContentIDRegistry__factory;
